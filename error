#변수
- 선언
 var="contents"
 var="kim lee hong"
  - 공백이 없어야 한다
  - 데이터 타입이 없음 모든 문자열로 인식됨

- 사용
 echo $var
  - 셸이 값을 치환함 (프로그램 구동 시)
  echo kim 형태로 에코한테 돌려줌
- [a-zA-Z_0-9]*  변수라고 할 수 있음


## 할당
 - 프로그램 이름도 변수로 받을 수 있음
 - command=wc
   op=-c
   $command $op animals.txt
   모두 가능

 - 다른 변수도 새 변수로 할당할 수 있음
  var2=$var
  echo $var2

- 선언하지 않은 변수 
 -> 보통 프로그램에선 오류, 셸에서는 공백(null)
 - 명령 라인에 넣어도 무시함
 
## null
var=
var=""
var=''
-> 모두 null값을 의미
' ' # 공백 1개

# 변수 활용하기
 - file=grades -> grades1
 - file=grades1
 - '${변수}' 구조
 - ${file}1


Q. grades를 grades1으로 파일명 변경하기
file=grades
mv $file ${file}1


## substring 추출하기
 - ${var:start:size}
 - ${var:10:4} #start:end
 
Q. aniamls.txt를 animals.md로 바꾸기
 file=animal.txt
 echo ${file:0:7}
 mv $file ${file:0:7}.md

 ## $(( 변수 )) 구조 (표현식)
  - 수학 연산을 가능하게 하는 구조
  - 숫자인 문자열이 들어왔을 때, 숫자로 인식하게 해주는 기능 제공

Q. 5를 변수에 담고 활용해서 15를 변수에 담아보라
five=5
fifteen=$(( five + 10 ))

- 비교연산
 $(( ten > 0 )) # 1 == True, 0 == False

 Q. 임의의 수 num이 2의 배수인지 확인하는 코드 작성
num=2
echo $(( num %2 ==0 ))

##$( ) 표현
 - 명령의 결과값을 변수에 담고 싶을 때
 reslt=$( cat /etc/passwd | cut -d: -f1 )


 # 스크립트 파일 작성하기
  - 파일 확장자는 .sh or more
   1) 파일을 실행가능한 상태로 바꾼다
   chmod +x file_name # 권한 부여
   2) 실행하기
   ./filename
   shebang닫기

   주석은 #


# 인수

#!/bin/bash

## 위치 인수 (positional argument)
 - $n (-9)
 - 외부에서 인수를 받아와서 사용할 때
 - ${10} -> 10이상일 때

## $#
 - 총 인수 개수
 echo '$#' (x)
 echo "$#" (o) # 큰 따옴표로 인수 감싸기

 ...sh
 파일명: count
 
 -출력-
 현재 위치: ...
 파일 ...개, 폴더 ...개 입니다.

dir="$1"
echo "$dir"

file=$(ls -l | cut -c1 | grep -v d |wc -l)
folder=$(ls -l | cut -c1 | grep d | wc -l)
echo "현재 위치: $(pwd)"
echo "파일 "$file"개, 폴더 $folder개"
 
test case 1: .
test case 2: *
 
## $*
 - 모든 인수를 출력

 #전화번호부 관리 스크립트 만들기
  1) 검색
   ./bach.sj 이름
  2)
   이름, 번호를 인자로 넣어 추가
  3삭제
   이름으로 검색해서 이름, 번호 삭제
   


exampl.md 이용용

# 마크다운 (markdown language)
 - 마크업 언어 중 하나
 - txt 파일 차이점은 포매팅이 들어가는 것
 - 언어의 규칙이 있고 이를 html로 전환하여 화면에 보여지는 방식
 -확장자는  .md, .markdown

## 장단점
- 간결하다
- 도구없이 사용 가능
- 용량이 적다
- 버전 관리도 쉽다
- 지원하는 애플리케이션이 많다
- 표준이 없다

## 프로세스
파일 생성 -> 플랫폼에 파일을 변환 -> html 읽고 -> 랜더링된 결과물 보여줌
- 마크다운 프로세스, 파서, 등으로 부른다.

## 기본 문법
1. hearings

 - # * ' ' : heading 1
 - ## * ' ' : heading 2
 - ### * ' ' : heading 3
 - 한줄 개행 들어가야 함

# 타이틀

- 본문
''''

2. 문단 (paragraph)
- 한줄 개행

이것은 문단입니다.

 - 들여쓰기 하면 안됨
 이것은 문단이 아닙니다.

3. line breaks
- 공백 두개 이상 넣고 엔터
- 눈에 보이지 않기 때문에 불편함
- <br>
- 무방비하게 엔터 남용하지 말것

4. 강조하기
4.1. bold
 - ** 혹은 __ 사용한다
 - 강조하고 싶은 부분 앞뒤로 감싼다.
 - 언더바는 단어 중간에 사용할 경우 인식되지 않음

 
4.2. italiv
 - *, _ 1개
 - 나머지는 동일
 
4.3. bold + italiv
- ***, ___
- 언더바 한계 동일함
- **_ 혹은 __* 도 가능

5. 인용구
 - > 화살표 기호 사용
 - >> 중첩인용 (nested quotes)
 - 인용 안에 다른 요소 넣을 때 (문제 업음)


5. 리스트
 5.1 순서가 있는 리스트
  - 숫자 + '.' 문단이 시작됨
  - 숫자에 상관없이 순서가 매겨진다.
  - 숫자 + ')' 는 플랫폼마다 다르다.

 5.2 순서가 없는 리스트
  - 대시, *, + 기호 등을 사용하여 목록화한다.
  - 혼합해서 사용하는 것 주의
  - 한 가지만 택해서 사용하는 것 추천

 5.3 중첩 리스트
  - 탭으로 구분

  - 기능을 해제하고 싶다면? \ 사용

5.4 리스트 중간에 요소 삽입하기
 - 들여쓰기 하고 요소를 넣는다
 - 앞뒤로 개행 넣는 습관

6. 코드 블록
 - 라인 내부: 'code_block' (backtick) 사용한다
  - 코드 안에 백팃이 있으면, ''code_block'''

- 라인 외부
 - 모든 라인을 탭한다
 - 탭하고 싶지 않다면 ''' 사용한다
  - 언어를 명시할 수 있음

7. 선긋기
*** 
---
---
 - 앞뒤로 개행해주는 것이 좋다

8. 링크 삽입하기
 - [텍스트](url 주소 넣기 "title")
 - 단순한 방식: <url>
 - 플랫폼에 따라 이메일을 자동으로 인식할 수도 있다
 - 기능을 해제하려면?
  - backtick (github에서 사용)
  
- 링크 포맷팅도 가능
 - bold, italic 등 모두 가능
 - 공백 주의 **_ _**
 - 코드에 링크를 걸고 싶다
  this is pyhton code
 
Q. github.com에 걸기
this is a python [code](www.github.com "github")

8.1 출처 표기 식 링크 걸기
 - 래퍼펀스 모으기 위한 방법
 - 본문 내부 / 래퍼런스
  [text][label]
  [label]: url
  - 콜론 다음에 공백
- 레이블은 글자 숫자 공백 기호 가능함
- url은 <, > 감싸도 됨 ("")

9. 이미지
 - 구조: ![text][img_path "title"]
 - title은 옵션
 - 이미지 자체에 링크 삽입
 [![text][img_path "title"]](url)

 10. 표
  - 열 (|)과 행(-)
  - 행이 생성이 되면 표가 만들어짐 (- 3개 이상)
  - 정렬
   - 왼쪽 오른쪽 가운데
   - 행 부분에 : 삽입한다
  - 셸 내부에서도 다른 문법을 사용할 수 있다. (코드블록은 제외)


  # 확장 표현
  11. 각주 달기
  - 텍스트 내부에서 윗첨자로 각주 표시하기
  - 본문 내부/각주 부분
  - text[^1]
  - [^1]: This is a foornote 1.
  - 각주부분은 텍스트 어디에나 위치할 수 있음
   - 화면 하단에 존재
   - 표 리스트 등등 안되는 기능 존재
 12. 기타 텍스트 강조
   1) strikethrough
    - 글자에 선 긋기
    - ~~ 앞뒤로 감싼다

  2) 형광펜
   - ==text==

13. 아랫첨자, 윗첨자
 H~2~0
 X^1^

14. 할 일 목록
 - [X] todo1

15. 이모지
: 누르면 뜬다
거기서 고르기